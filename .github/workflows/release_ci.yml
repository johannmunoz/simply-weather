name: Release Simply Weather

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
      - "master"

# on: push    # Default will running for every branch.

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Fetch all history for all tags and branches
        run: |
          git fetch --prune --depth=10000
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.2
        with:
          versionSpec: "5.2.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.2
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
  build:
    name: Build APK and Create release
    needs: [version]
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
      # Setup Java environment in order to build the Android app.
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - run: echo $SIGNING_KEY | base64 -d > android/app/key.jks
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable" # 'dev', 'alpha', default to: 'stable'
          # flutter-version: '1.12.x' # you can also specify exact version of flutter

      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt

      # Get flutter dependencies.
      - run: flutter pub get

      # Build generated files
      - run: flutter packages pub run build_runner build --delete-conflicting-outputs

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .

      # Run widget tests for our flutter project.
      #- run: flutter test

      # Build apk.
      - run: flutter build apk
        env:
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          ALIAS: ${{ secrets.ALIAS }}
          KEY_PATH: key.jks

      # Upload generated apk to the artifacts.
      # - uses: actions/upload-artifact@v1
      #   with:
      #     name: simplyweather-apk
      #     path: build/app/outputs/apk/release/app-release.apk
      #     token: ${{ secrets.TOKEN }}

      - name: Create a Release APK
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk"
          token: ${{ secrets.TOKEN }}
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}
